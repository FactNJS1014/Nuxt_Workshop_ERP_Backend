
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  username: 'username',
  password: 'password',
  level: 'level',
  status: 'status',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.ProductTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  remark: 'remark',
  status: 'status',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.MaterialScalarFieldEnum = {
  id: 'id',
  name: 'name',
  unit: 'unit',
  price: 'price',
  remark: 'remark',
  status: 'status',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.StockMaterialScalarFieldEnum = {
  id: 'id',
  materialId: 'materialId',
  quantity: 'quantity',
  price: 'price',
  remark: 'remark',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.PackagingScalarFieldEnum = {
  id: 'id',
  name: 'name',
  remark: 'remark',
  status: 'status',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  remark: 'remark',
  status: 'status',
  packagingId: 'packagingId',
  productTypeId: 'productTypeId',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.ProductFormularScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  materialId: 'materialId',
  quantity: 'quantity',
  status: 'status',
  remark: 'remark',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.ProductionPlanScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  productId: 'productId',
  remark: 'remark',
  status: 'status',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.ProductionScalarFieldEnum = {
  id: 'id',
  productionPlanId: 'productionPlanId',
  quantity: 'quantity',
  remark: 'remark',
  status: 'status',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  User: 'User',
  ProductType: 'ProductType',
  Material: 'Material',
  StockMaterial: 'StockMaterial',
  Packaging: 'Packaging',
  Product: 'Product',
  ProductFormular: 'ProductFormular',
  ProductionPlan: 'ProductionPlan',
  Production: 'Production'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\TESTWEB\\NuxtJS\\Nuxt_Workshop\\api\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\TESTWEB\\NuxtJS\\Nuxt_Workshop\\api\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mongodb",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mongodb\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id       String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name     String\n  username String\n  password String\n  level    String    @default(\"admin\")\n  status   String    @default(\"active\")\n  createAt DateTime? @default(now())\n  updateAt DateTime? @updatedAt\n}\n\nmodel ProductType {\n  id       String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name     String\n  remark   String?\n  status   String    @default(\"active\")\n  createAt DateTime? @default(now())\n  updateAt DateTime? @updatedAt\n  Product  Product[]\n}\n\nmodel Material {\n  id              String            @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name            String\n  unit            String\n  price           Int\n  remark          String?\n  status          String            @default(\"active\")\n  createAt        DateTime?         @default(now())\n  updateAt        DateTime?         @updatedAt\n  StockMaterial   StockMaterial[]\n  ProductFormular ProductFormular[]\n}\n\nmodel StockMaterial {\n  id         String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  materialId String    @db.ObjectId\n  quantity   Int\n  price      Int\n  remark     String?\n  createAt   DateTime? @default(now())\n  updateAt   DateTime? @updatedAt\n  Material   Material  @relation(fields: [materialId], references: [id])\n}\n\nmodel Packaging {\n  id       String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name     String\n  remark   String?\n  status   String    @default(\"active\")\n  createAt DateTime? @default(now())\n  updateAt DateTime? @updatedAt\n  Product  Product[]\n}\n\nmodel Product {\n  id              String            @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name            String\n  remark          String?\n  status          String            @default(\"active\")\n  packagingId     String?           @db.ObjectId\n  productTypeId   String?           @db.ObjectId\n  createAt        DateTime?         @default(now())\n  updateAt        DateTime?         @updatedAt\n  ProductFormular ProductFormular[]\n  Packaging       Packaging?        @relation(fields: [packagingId], references: [id])\n  ProductType     ProductType?      @relation(fields: [productTypeId], references: [id])\n  ProductionPlan  ProductionPlan[]\n}\n\nmodel ProductFormular {\n  id         String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  productId  String    @db.ObjectId\n  materialId String    @db.ObjectId\n  quantity   Float\n  status     String    @default(\"active\")\n  remark     String?\n  createAt   DateTime? @default(now())\n  updateAt   DateTime? @updatedAt\n  Product    Product   @relation(fields: [productId], references: [id])\n  Material   Material  @relation(fields: [materialId], references: [id])\n}\n\nmodel ProductionPlan {\n  id         String       @id @default(auto()) @map(\"_id\") @db.ObjectId\n  quantity   Float\n  productId  String       @db.ObjectId\n  remark     String?\n  status     String       @default(\"active\")\n  createAt   DateTime?    @default(now())\n  updateAt   DateTime?    @updatedAt\n  Product    Product      @relation(fields: [productId], references: [id])\n  Production Production[]\n}\n\nmodel Production {\n  id               String         @id @default(auto()) @map(\"_id\") @db.ObjectId\n  productionPlanId String         @db.ObjectId\n  quantity         Float\n  remark           String?\n  status           String         @default(\"active\")\n  createAt         DateTime?      @default(now())\n  updateAt         DateTime?      @updatedAt\n  ProductionPlan   ProductionPlan @relation(fields: [productionPlanId], references: [id])\n}\n",
  "inlineSchemaHash": "a35a8614b59df66fc20a599451f06eaa77cb69cd4224126634a39da3fa849835",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ProductType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductType\"}],\"dbName\":null},\"Material\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"StockMaterial\",\"kind\":\"object\",\"type\":\"StockMaterial\",\"relationName\":\"MaterialToStockMaterial\"},{\"name\":\"ProductFormular\",\"kind\":\"object\",\"type\":\"ProductFormular\",\"relationName\":\"MaterialToProductFormular\"}],\"dbName\":null},\"StockMaterial\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"materialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Material\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"MaterialToStockMaterial\"}],\"dbName\":null},\"Packaging\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"PackagingToProduct\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packagingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ProductFormular\",\"kind\":\"object\",\"type\":\"ProductFormular\",\"relationName\":\"ProductToProductFormular\"},{\"name\":\"Packaging\",\"kind\":\"object\",\"type\":\"Packaging\",\"relationName\":\"PackagingToProduct\"},{\"name\":\"ProductType\",\"kind\":\"object\",\"type\":\"ProductType\",\"relationName\":\"ProductToProductType\"},{\"name\":\"ProductionPlan\",\"kind\":\"object\",\"type\":\"ProductionPlan\",\"relationName\":\"ProductToProductionPlan\"}],\"dbName\":null},\"ProductFormular\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"materialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductFormular\"},{\"name\":\"Material\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"MaterialToProductFormular\"}],\"dbName\":null},\"ProductionPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductionPlan\"},{\"name\":\"Production\",\"kind\":\"object\",\"type\":\"Production\",\"relationName\":\"ProductionToProductionPlan\"}],\"dbName\":null},\"Production\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"productionPlanId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ProductionPlan\",\"kind\":\"object\",\"type\":\"ProductionPlan\",\"relationName\":\"ProductionToProductionPlan\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

